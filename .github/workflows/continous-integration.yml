name: Run molecule scenarios
on: [push, pull_request]
jobs:
  run-molecule:
    name: Test molecule scenarios
    strategy:
      fail-fast: false
      matrix:
        scenario: [backwards_compatibility, default, other_features, tls]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - name: Install Pipenv
        run: python -m pip install pipenv

      - name: Cache Pipenv packages
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ hashFiles('**/Pipfile.lock') }}
      
      - name: Create docker images cache folder
        run: mkdir ~/docker-cache
      
      - name: Cache docker images
        uses: actions/cache@v2
        with:
          path: ~/docker-cache
          key: docker-cache
      
      - name: Import docker images backup
        run: if [ $(find ~/docker-cache/ -name "*.tar" | wc -l) -gt 0 ]; then for f in ~/docker-cache/*.tar; do docker image import $f; done; fi
        run: for f in ~/docker-cache/*.tar; do docker image import $f; done

      - name: Install dependencies
        run: python -m pipenv install

      - name: Test molecule scenario
        run: python -m pipenv run molecule test -s ${{ matrix.scenario }}
      
      - name: Backup docker images
        run: for image in $(docker image ls | awk '{print $3;}' | grep -v "IMAGE"); do docker save $image -o ~/docker-cache/$image.tar; done